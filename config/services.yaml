# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
      autowire: true      # Automatically injects dependencies in your services.
      autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
      public: false       # Allows optimizing the container by removing unused services; this also means
      # fetching services directly from the container via $container->get() won't work.
      # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
      resource: '../src/*'
      exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\UI\Controller\:
      resource: '../src/UI/Controller'
      tags: ['controller.service_arguments']

    twig.extension.text:
      class: Twig_Extensions_Extension_Text
      tags:
        - { name: twig.extension }

    queryBus:
      class: App\Infrastructure\Application\QueryBus\QueryBus

    # Command bus handler

    # Query Bus

    # Tactician middleware Store domain events
    App\Application\Middleware\DomainEventsMiddleware:
      arguments: ['@doctrine.travel_event.repository']

    tactician.middleware.domainEventStore: '@App\Infrastructure\Middleware\DomainEventsMiddleware'

    # Repository User
    App\Infrastructure\UserBundle\Repository\DoctrineUserRepository:
      arguments: ['@doctrine']

    doctrine.user.repository: '@App\Infrastructure\UserBundle\Repository\DoctrineUserRepository'


    # Event store repository
    App\Infrastructure\EventBundle\Repository\DoctrineEventStore:
      arguments: ['@doctrine','@jms_serializer']

    doctrine.travel_event.repository: '@App\Infrastructure\EventBundle\Repository\DoctrineEventStore'
